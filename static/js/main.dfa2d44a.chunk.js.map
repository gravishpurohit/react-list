{"version":3,"sources":["component/Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Listitems","props","listitems","items","map","item","className","Array","prototype","remove","what","ax","a","arguments","L","length","this","indexOf","splice","listObjects","App","state","currentItem","text","handleInput","bind","addItem","event","setState","target","value","preventDefault","newItem","includes","unshift","console","log","newItems","id","onSubmit","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAceA,MAXf,SAAmBC,GACjB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,4BAAID,KADoB,eAK9B,OAAO,8BAAMH,K,MCRfK,MAAMC,UAAUC,OAAS,WAKvB,IAJA,IAAIC,EAGFC,EAFAC,EAAIC,UACJC,EAAIF,EAAEG,OAEDD,GAAKE,KAAKD,QAEf,IADAL,EAAOE,IAAIE,IAC2B,KAA9BH,EAAKK,KAAKC,QAAQP,KACxBM,KAAKE,OAAOP,EAAI,GAGpB,OAAOK,MAGT,IAAIG,EAAc,GA8DHC,E,kDA3Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXlB,MAAO,GACPmB,YAAa,CACXC,KAAM,KAGV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBATH,E,+CAWd,SAAYE,GACVX,KAAKY,SAAS,CACZN,YAAa,CACXC,KAAMI,EAAME,OAAOC,W,qBAIzB,SAAQH,GACNA,EAAMI,iBACN,IAAMC,EAAUhB,KAAKK,MAAMC,YAM3B,GALIH,EAAYc,SAASD,EAAQT,OAC/BJ,EAAYV,OAAOuB,EAAQT,MAE7BJ,EAAYe,QAAQF,EAAQT,MAC5BY,QAAQC,IAAIjB,GACS,KAAjBa,EAAQT,KAAa,CACvB,IAAMc,EAAQ,sBAAOrB,KAAKK,MAAMlB,OAAlB,CAAyB6B,IACvChB,KAAKY,SAAS,CACZzB,MAAOkC,EACPf,YAAa,CACXC,KAAM,S,oBAKd,WACE,OACE,gCACE,qBAAKjB,UAAU,MAAf,SACE,iDAEF,sBAAKA,UAAU,MAAf,UACE,uBAAMgC,GAAG,OAAOC,SAAUvB,KAAKU,QAA/B,UACE,uBACEc,KAAK,OACLC,YAAY,aACZX,MAAOd,KAAKK,MAAMC,YAAYC,KAC9BmB,SAAU1B,KAAKQ,cAEjB,wBAAQgB,KAAK,SAAb,sBAEF,cAAC,EAAD,CAAWrC,MAAOgB,c,GArDVwB,aCRHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfa2d44a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Listitems.css\";\n\nfunction Listitems(props) {\n  const items = props.items;\n  const listitems = items.map((item) => {\n    return (\n      <div className=\"list\" key=\"item.key\">\n        <p>{item}</p>\n      </div>\n    );\n  });\n  return <div>{listitems}</div>;\n}\nexport default Listitems;\n","import React, { Component } from \"react\";\nimport Listitems from \"./component/Listitems\";\nimport \"./App.css\";\n\nArray.prototype.remove = function () {\n  var what,\n    a = arguments,\n    L = a.length,\n    ax;\n  while (L && this.length) {\n    what = a[--L];\n    while ((ax = this.indexOf(what)) !== -1) {\n      this.splice(ax, 1);\n    }\n  }\n  return this;\n};\n\nvar listObjects = [];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n      },\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n  }\n  handleInput(event) {\n    this.setState({\n      currentItem: {\n        text: event.target.value,\n      },\n    });\n  }\n  addItem(event) {\n    event.preventDefault();\n    const newItem = this.state.currentItem;\n    if (listObjects.includes(newItem.text)) {\n      listObjects.remove(newItem.text);\n    }\n    listObjects.unshift(newItem.text);\n    console.log(listObjects);\n    if (newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n        },\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"fan\">\n          <h1>List Of Items</h1>\n        </div>\n        <div className=\"app\">\n          <form id=\"list\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n            <button type=\"submit\">click</button>\n          </form>\n          <Listitems items={listObjects}></Listitems>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}